- hosts: all:!localhost
  gather_facts: false
  strategy: free

  tasks:
    - name: Starting block to make sure endpoint reboot at the end of play
      block:
        - name: Find the OS version
          setup:
            gather_subset: min

        - name: checking C drive space
          win_shell: |-
            $c=(Get-WMIObject Win32_LogicalDisk | ?{$_.DriveType -eq 3 -and $_.Name -eq 'C:'} | Select-Object @{n='FreeSpace';e={"{0:n2}" -f ($_.freespace/1gb)}}).FreeSpace | ConvertTo-JSON
            $c
          register: spaceC
      
        - name: failing execution if c drive is less than 4GB
          set_fact:
            cspaces: "{{ spaceC.stdout | from_json }}"
          failed_when: cspaces|int <= 4

        - name: Create directory structure
          win_file:
            path: C:\Temp\ansible_win_patching
            state: directory
    
        - name: Create patching log file
          win_file:
            path: C:\Temp\ansible_win_patching\ansible_patching.txt
            state: touch

        - name: Reboot before installation
          win_reboot:
            pre_reboot_delay: 120
            reboot_timeout: 600
            post_reboot_delay: 120

        - name: Start Time
          win_shell: get-date -UFormat "%Y/%m/%d %H:%M:%S" | ConvertTo-JSON
          register: sdt

        - name: Installing Windows Patches
          win_updates:
            category_names:
            - CriticalUpdates
            - DefinitionUpdates
            - SecurityUpdates
            - Updates
            - UpdateRollups
            - ServicePacks
            - FeaturePacks
            server_selection: windows_update 
            state: installed
            reboot: no
            log_path: C:\Temp\ansible_win_patching\ansible_patching.txt
          register: wsusupdates

        - name: End Time
          win_shell: $tt=(get-date) - [datetime]"{{ sdt.stdout | from_json }}";$tt.TotalHours;

      rescue:
        - name: RETURN CODE GENERATION IN CASE OF FAILURE
          include_role:
            name: returncode
          vars:
            rc_support: undetermined
            rc_group: unsupported_platform
            rc_number: 111
            rc_message: "{{ inventory_hostname }} : Error {{ wsusupdates }}"