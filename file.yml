---
- hosts: all:!localhost
  gather_facts: false
  tasks:
    - name: Initialize variables
      set_fact:
        exec_success: false
        exec_changed: false
        exec_rc: 1
        exec_message: "The initial status didn't change during the execution of
         the playbook."
        exec_automation: "sra_linux_change_rights_file_dir"
        pattern_digits: '^.{3}$'
        pattern_num: '^[0-7]{3}$'

    - name: Set facts on error - variable is empty
      set_fact:
        exec_success: false
        exec_changed: false
        exec_rc: 3001
        exec_message: "file_name or file_prem input variable is empty"
      when: file_name is undefined or file_prem is undefined

    - name: Set facts on error - invalid action
      set_fact:
        exec_success: false
        exec_changed: false
        exec_rc: 3002
        exec_message: "{{ file_prem }} Permission is not valid. Valid 4,5,6 or 7"
      when: 
        - exec_rc != 3001 and file_prem is defined
        - file_prem is not regex(pattern_digits)
        - file_prem is not regex(pattern_num)

    - name: Show variables
      debug:
        msg:
          - "*************************************************"
          - "File Name or Path: {{ file_name }}"
          - "Access Permission: {{ file_prem }}"
          - "*************************************************"
      when: exec_rc != 3001 and exec_rc != 3002

    - name: Perform action to file/directory
      block:
        - name: Check if {{ file_name }} exists
          stat:
            path: "{{ file_name }}"
          register: stat_result
          ignore_errors: true
      
        - name: "Set facts - Check if {{ file_name }} exists"
          set_fact:
            exec_success: false
            exec_changed: false
            exec_rc: 3003
            exec_message: "{{ file_name }} file or directory not exists on {{ inventory_hostname }}"
          when: not stat_result.stat.exists

        - name: "Set permission {{ file_prem }} to {{ file_name }}"
          file:
            path: "{{ file_name }}"
            mode: "{{ file_prem }}"
          register: permission_status
          when: stat_result.stat.exists
          ignore_errors: true

        - name: "Set facts on error"
          set_fact:
            exec_success: false
            exec_changed: false 
            exec_rc: 1
            exec_message: "Failed to change access rights {{ file_prem }} on {{ file_name }}"
          when: 
            - stat_result.stat.exists
            - permission_status.failed

        - name: "Set facts on success"
          set_fact: 
            exec_success: true
            exec_changed: true 
            exec_rc: 0
            exec_message: "Successfully changed access rights {{ file_prem }} on {{ file_name }}"
          when: 
            - stat_result.stat.exists
            - not permission_status.failed
      when: exec_rc != 3001 and exec_rc != 3002

    - name: "Change access rights {{ file_prem }} on {{ file_name }}"
      debug: 
        msg: "{{ exec_message }} - RC({{ exec_rc }})"
