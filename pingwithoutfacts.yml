---
- hosts: all
  gather_facts: false
  ignore_errors: true
  ignore_unreachable: true
  tasks:
    - name: Set facts
      set_fact:
        host_reachable: false
        host_exist: true
        isadmin: >-
          whoami;$wid=[System.Security.Principal.WindowsIdentity]::GetCurrent();
          $prp=new-object System.Security.Principal.WindowsPrincipal($wid);
          $adm=[System.Security.Principal.WindowsBuiltInRole]::Administrator;
          $IsAdmin=$prp.IsInRole($adm);write-host Administrator: $isadmin;
      ignore_errors: true

    - name: Check raw module
      raw: hostname;whoami;
      changed_when: false
      register: raw_result
      ignore_errors: true
      ignore_unreachable: true

    - name: Able to reach Node
      set_fact:
        host_reachable: true
        job_msg: "Success, {{ inventory_hostname }} is reachable"
      when: raw_result.rc == 0    
      ignore_errors: true

    - name: Unable to reach Node
      set_fact:
        host_reachable: false
        job_msg: "Failed, {{ inventory_hostname }} is not reachable, Incorrect credentials"
      when: raw_result.unreachable is defined and ('password' in raw_result.msg or 'credentials' in raw_result.msg)
      ignore_errors: true

    - name: Unable to reach Node
      set_fact:
        host_reachable: false
        job_msg: "Failed, {{ inventory_hostname }} is not reachable, Network Issue"
      when: raw_result.unreachable is defined and ('port' in raw_result.msg)
      ignore_errors: true

    - name: Gather Facts
      setup: 
        gather_subset: min
      when: host_reachable   
      ignore_errors: true

    - name: Check Privilege
      raw: "{{ (ansible_facts['os_family'] != 'Windows') | ternary('whoami', isadmin) }}"
      become: "{{ (ansible_facts['os_family'] != 'Windows') | ternary('yes', 'no') }}"
      changed_when: false
      register: priv_result
      when: host_reachable
      ignore_errors: true

    - name: stats
      set_stats: 
        data:
          csvformat: "{{ job_msg }}"
      ignore_errors: true